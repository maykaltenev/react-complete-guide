{"ast":null,"code":"var _jsxFileName = \"/Users/begemoth/app/udemy/react-complete-guide/section-13/src/components/Users.js\";\nimport { Component } from 'react';\nimport User from './User';\nimport classes from './Users.module.css'; // 1. What is constructor ?\n// The constructor method is a special method of\n// a class for creating and initializing an object\n// instance of that class. The purpose of a constructor is to create a new object and set\n// values for any existing object properties.\n// 2. Definition of a class?\n// Unlike other programming languages such as Java and C#, \n// JavaScript classes are syntactic sugar over the prototypal\n// inheritance. In other words, ES6 classes are just special functions.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true\n    };\n  }\n\n  toggleUsersHandler() {\n    // class setState is merging the state \n    this.setState(curState => {\n      return {\n        showUsers: !curState.showUsers\n      };\n    });\n  }\n\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: DUMMY_USERS.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n} // const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\n\nexport default Users;","map":{"version":3,"names":["Component","User","classes","Users","constructor","state","showUsers","toggleUsersHandler","setState","curState","render","usersList","DUMMY_USERS","map","user","name","id","users","bind"],"sources":["/Users/begemoth/app/udemy/react-complete-guide/section-13/src/components/Users.js"],"sourcesContent":["import { Component } from 'react';\nimport User from './User';\n\nimport classes from './Users.module.css';\n\n\n\n// 1. What is constructor ?\n// The constructor method is a special method of\n// a class for creating and initializing an object\n// instance of that class. The purpose of a constructor is to create a new object and set\n// values for any existing object properties.\n// 2. Definition of a class?\n// Unlike other programming languages such as Java and C#, \n// JavaScript classes are syntactic sugar over the prototypal\n// inheritance. In other words, ES6 classes are just special functions.\n\nclass Users extends Component {\n  constructor() {\n    super()\n    this.state = {\n      showUsers: true,\n    };\n  }\n  toggleUsersHandler() {\n    // class setState is merging the state \n    this.setState((curState) => {\n      return { showUsers: !curState.showUsers }\n    })\n  }\n  render() {\n    const usersList = (\n      <ul>\n        {DUMMY_USERS.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n    return <div className={classes.users}>\n      <button onClick={this.toggleUsersHandler.bind(this)}>\n        {this.state.showUsers ? 'Hide' : 'Show'} Users\n      </button>\n      {this.state.showUsers && usersList}\n    </div>\n  }\n}\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,OAAP,MAAoB,oBAApB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;EAC5BI,WAAW,GAAG;IACZ;IACA,KAAKC,KAAL,GAAa;MACXC,SAAS,EAAE;IADA,CAAb;EAGD;;EACDC,kBAAkB,GAAG;IACnB;IACA,KAAKC,QAAL,CAAeC,QAAD,IAAc;MAC1B,OAAO;QAAEH,SAAS,EAAE,CAACG,QAAQ,CAACH;MAAvB,CAAP;IACD,CAFD;EAGD;;EACDI,MAAM,GAAG;IACP,MAAMC,SAAS,gBACb;MAAA,UACGC,WAAW,CAACC,GAAZ,CAAiBC,IAAD,iBACf,QAAC,IAAD;QAAoB,IAAI,EAAEA,IAAI,CAACC;MAA/B,GAAWD,IAAI,CAACE,EAAhB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF;;IAOA,oBAAO;MAAK,SAAS,EAAEd,OAAO,CAACe,KAAxB;MAAA,wBACL;QAAQ,OAAO,EAAE,KAAKV,kBAAL,CAAwBW,IAAxB,CAA6B,IAA7B,CAAjB;QAAA,WACG,KAAKb,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,MADnC;MAAA;QAAA;QAAA;QAAA;MAAA,QADK,EAIJ,KAAKD,KAAL,CAAWC,SAAX,IAAwBK,SAJpB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EAMD;;AA3B2B,C,CA6B9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeR,KAAf"},"metadata":{},"sourceType":"module"}